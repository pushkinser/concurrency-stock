version: '3.8'
services:
  concurrency-stock:
    build: .
    container_name: concurrency-stock
    image: concurrency-stock:latest
    env_file: .env
    depends_on:
      - 'postgres'
      - 'mongo'
      - 'init-kafka'
      - 'kafka-ui'
  postgres:
    container_name: concurrency-stock-postgres
    image: postgres:14
    ports:
      - "${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}"
    volumes:
      - concurrency-stock-postgres:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_DB_USER_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_DB_USER_PASSWORD}
  mongo:
    container_name: concurrency-stock-mongo
    image: mongo:6-jammy
    ports:
      - "${MONGO_DB_PORT}:${MONGO_DB_PORT}"
    volumes:
      - concurrency-stock-mongo:/var/lib/mongo/data/
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USER_NAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_USER_PASSWORD}
  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  kafka:
    image: confluentinc/cp-kafka
    container_name: concurrency-stock-kafka
    depends_on:
      - zookeeper
    restart: always
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: concurrency-stock-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8085:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
  init-kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic iexapis-int-stock-stocksForUpdateQuotes-v1 --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

volumes:
  concurrency-stock-postgres:
    driver: local
  concurrency-stock-mongo:
    driver: local
